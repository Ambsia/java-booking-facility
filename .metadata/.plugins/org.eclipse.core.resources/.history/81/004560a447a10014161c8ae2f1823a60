package com.bookingsystem.model;
import java.io.UnsupportedEncodingException;
import java.security.NoSuchAlgorithmException;
import java.security.SecureRandom;

import org.apache.commons.codec.digest.*;
public class Account {

	private int userID;
	private String userLogonName;
	private String hashedPassword;
	private int userLevel;
	private String userSalt;

	public static String validationMsg = "";

	public Account(int userID, int userLevel, String username,
			String hashedPassword) {
		
		this.userID = userID;
		this.userLevel = userLevel;
		this.userLogonName = username;
		this.hashedPassword = SHA1_HASH(hashedPassword);
		
		if (!Validation()) {

		} else {
			
			
			Login();
		}
	}

	public boolean Validation() {
		return !this.userLogonName.isEmpty() || !this.hashedPassword.isEmpty();
	}

	public String GetUsername() {
		return this.userLogonName;
	}

	public String GetHashedPassword() {
		return this.hashedPassword;
	}

	public void CreateAccount() {

	}
	
	public void Login() {
		
	}

	public String SHA1_HASH(String unHashedString) {
		GenerateSalt();
		String hashedString = DigestUtils.sha1Hex(unHashedString);
	
		return hashedString;
	}

	public void GenerateSalt() throws NoSuchAlgorithmException, UnsupportedEncodingException {
		SecureRandom random = SecureRandom.getInstance("SHA1PRNG");
		byte[] salt = new byte[20];
		random.nextBytes(salt);
		userSalt = new String(salt, "UTF-8");
	} 

	public Account ReturnAccount() {

		return null;
	}

	@Override
	public String toString() {
		return "UserID: " + "\t" + userID + "\n" + "Username:" + "\t"
				+ userLogonName + "\n" + "Password: " + "\t" + hashedPassword
				+ "\n" + "User Level: " + "\t" + userLevel + "\n" + "Salt: "
				+ userSalt;
	}

}
